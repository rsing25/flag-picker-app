{"ast":null,"code":"import _classCallCheck from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rsing25/flag-picker-app/src/containers/continent-list.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectContinent, clearConuntry } from \"../actions/index\";\nimport AutoSuggest from \"../components/autosuggest\";\n\nvar ContinentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContinentList, _Component);\n\n  function ContinentList(props) {\n    var _this;\n\n    _classCallCheck(this, ContinentList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContinentList).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ContinentList, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.props.continents.map(function (arrVal, index) {\n        return arrVal.continent;\n      });\n      console.log(\"data\" + JSON.stringify(data));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Step 1\"), React.createElement(\"div\", {\n        className: \"text-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Select a continent\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(AutoSuggest, {\n        type: \"normal\",\n        data: data,\n        onChange: this.onChangeContinent.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.renderSelectedContinent()));\n    }\n  }, {\n    key: \"renderSelectedContinent\",\n    value: function renderSelectedContinent() {\n      if (!this.props.activeContinent.continent || this.props.activeContinent == null) {\n        return null;\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"text-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"You selected\"), React.createElement(\"div\", {\n          className: \"text-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, this.props.activeContinent.continent));\n      }\n    }\n  }, {\n    key: \"onChangeContinent\",\n    value: function onChangeContinent(continent) {\n      if (continent !== this.props.activeContinent.continent) {\n        this.props.onClearConuntry({});\n        this.props.onSelectContinent({\n          continent: continent\n        });\n      }\n    }\n  }]);\n\n  return ContinentList;\n}(Component);\n\nexport var mapStateToProps = function mapStateToProps(state) {\n  return {\n    continents: state.continents,\n    activeContinent: state.activeContinent\n  };\n};\nexport var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSelectContinent: function onSelectContinent(options) {\n      dispatch(selectContinent(options));\n    },\n    onClearConuntry: function onClearConuntry(options) {\n      dispatch(clearConuntry(options));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContinentList);","map":{"version":3,"sources":["/Users/rsing25/flag-picker-app/src/containers/continent-list.js"],"names":["React","Component","connect","selectContinent","clearConuntry","AutoSuggest","ContinentList","props","state","data","continents","map","arrVal","index","continent","console","log","JSON","stringify","onChangeContinent","bind","renderSelectedContinent","activeContinent","onClearConuntry","onSelectContinent","mapStateToProps","mapDispatchToProps","dispatch","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectContinent, clearConuntry } from \"../actions/index\";\nimport AutoSuggest from \"../components/autosuggest\";\n\nclass ContinentList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const data = this.props.continents.map( (arrVal, index) => {\n            return arrVal.continent\n        });\n        console.log(\"data\"+ JSON.stringify(data));\n        return (\n            <div>\n                <div className=\"text-1\">Step 1</div>\n                <div className=\"text-2\">Select a continent</div>\n                <div><AutoSuggest type=\"normal\" data= {data} onChange = {this.onChangeContinent.bind(this)}/></div>\n                <div>\n                    {this.renderSelectedContinent()}\n                </div>\n            </div>\n        );\n    }\n\n    renderSelectedContinent() {\n        if(!this.props.activeContinent.continent  || this.props.activeContinent == null) {\n            return null;\n        } else {\n            return (\n                <div>\n                    <div className=\"text-2\">You selected</div>\n                    <div className=\"text-1\">{this.props.activeContinent.continent}</div>\n                </div>\n            )\n        }\n    }\n    onChangeContinent(continent)  {\n        if(continent !== this.props.activeContinent.continent) {\n            this.props.onClearConuntry({});\n            this.props.onSelectContinent({continent:continent});    \n        }        \n    }\n}\n\nexport const mapStateToProps = state => {\n    return {\n        continents: state.continents,\n        activeContinent: state.activeContinent\n    };\n};\n\nexport const mapDispatchToProps = dispatch => {\n    return {\n        onSelectContinent: options => {\n            dispatch(selectContinent(options));\n        },\n        onClearConuntry: options => {\n            dispatch(clearConuntry(options));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContinentList);\n"]},"metadata":{},"sourceType":"module"}