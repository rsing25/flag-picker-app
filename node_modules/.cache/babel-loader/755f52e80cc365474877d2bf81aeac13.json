{"ast":null,"code":"import _classCallCheck from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rsing25/flag-picker-app/src/containers/flag-detail.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearConuntry } from \"../actions/index\";\n\nvar FlagDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FlagDetail, _Component);\n\n  function FlagDetail(props) {\n    var _this;\n\n    _classCallCheck(this, FlagDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FlagDetail).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(FlagDetail, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.activeContinent.continent || this.props.activeContinent == null) {\n        return null;\n      }\n\n      if (this.props.countries.length === 0) {\n        return null;\n      }\n\n      var data = this.props.continents.filter(function (arrVal, index) {\n        return _this2.props.activeContinent.continent === arrVal.continent;\n      });\n      var dataIn = data[0].countries.filter(function (country) {\n        return _this2.props.countries.indexOf(country.name) !== -1;\n      });\n      var flagIn = dataIn.map(function (country) {\n        return country.flag;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Selected flags:\"), React.createElement(\"div\", {\n        className: \"text-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.renderFlags(flagIn)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        onClick: this.onClearConuntryClick.bind(this),\n        value: \"Clear Flags\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderFlags\",\n    value: function renderFlags(flags) {\n      return flags.map(function (flag) {\n        return React.createElement(\"span\", {\n          key: flag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, flag);\n      });\n    }\n  }, {\n    key: \"onClearConuntryClick\",\n    value: function onClearConuntryClick() {\n      this.props.onClearConuntry({});\n    }\n  }]);\n\n  return FlagDetail;\n}(Component);\n\nexport var mapStateToProps = function mapStateToProps(state) {\n  return {\n    continents: state.continents,\n    countries: state.countries,\n    activeContinent: state.activeContinent\n  };\n};\nexport var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onClearConuntry: function onClearConuntry(options) {\n      dispatch(clearConuntry(options));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FlagDetail);","map":{"version":3,"sources":["/Users/rsing25/flag-picker-app/src/containers/flag-detail.js"],"names":["React","Component","connect","clearConuntry","FlagDetail","props","state","activeContinent","continent","countries","length","data","continents","filter","arrVal","index","dataIn","country","indexOf","name","flagIn","map","flag","renderFlags","onClearConuntryClick","bind","flags","onClearConuntry","mapStateToProps","mapDispatchToProps","dispatch","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearConuntry } from \"../actions/index\";\n\nclass FlagDetail extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        if(!this.props.activeContinent.continent  || this.props.activeContinent == null) {\n            return null;\n        }\n        if(this.props.countries.length  === 0) {\n            return null;\n        }\n        const data = this.props.continents.filter( (arrVal, index) => {\n            return this.props.activeContinent.continent === arrVal.continent;\n        });\n\n        const dataIn = data[0].countries.filter((country)=>{\n            return this.props.countries.indexOf(country.name) !== -1;\n        });\n\n        const flagIn = dataIn.map((country)=>{\n            return country.flag;\n        });\n        \n        return(\n            <div>\n                <div className=\"text-1\">Selected flags:</div>\n                <div className=\"text-2\">\n                        {this.renderFlags(flagIn)}\n                </div>\n                <div><input type=\"button\"  \n                    onClick = {this.onClearConuntryClick.bind(this)} value=\"Clear Flags\"/>\n                </div>\n            </div>\n        )\n    }\n\n    renderFlags(flags) {\n        return flags.map((flag)=> {\n            return (<span key={flag}>{flag}</span>);\n        });\n    }\n\n    onClearConuntryClick()  {\n            this.props.onClearConuntry({});\n    }\n}\n\nexport const mapStateToProps = state => {\n    return {\n        continents: state.continents,\n        countries: state.countries,\n        activeContinent: state.activeContinent\n    };\n};\n\nexport const mapDispatchToProps = dispatch => {\n    return {\n        onClearConuntry: options => {\n            dispatch(clearConuntry(options));\n        }\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FlagDetail);"]},"metadata":{},"sourceType":"module"}