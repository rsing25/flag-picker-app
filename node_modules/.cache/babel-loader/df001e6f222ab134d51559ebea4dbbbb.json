{"ast":null,"code":"import _classCallCheck from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rsing25/flag-picker-app/src/components/autosuggest.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nvar Autosuggest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Autosuggest, _Component);\n\n  function Autosuggest(props) {\n    var _this;\n\n    _classCallCheck(this, Autosuggest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Autosuggest).call(this, props));\n\n    _this.handleClick = function (e) {\n      if (ReactDOM.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this))).contains(e.target)) {\n        return;\n      } else {\n        _this.setState({\n          showMenu: false\n        });\n      }\n    };\n\n    _this.state = {\n      autoIn: \"\",\n      showMenu: false\n    };\n    return _this;\n  }\n\n  _createClass(Autosuggest, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      document.addEventListener('mousedown', this.handleClick.bind(this), false);\n    }\n  }, {\n    key: \"componentWillUnMount\",\n    value: function componentWillUnMount() {\n      document.removeEventListener('mousedown', this.handleClick.bind(this), false);\n    }\n  }, {\n    key: \"onAutoInputUpdate\",\n    value: function onAutoInputUpdate(e) {\n      this.setState({\n        autoIn: e.target.value,\n        showMenu: true\n      });\n    }\n  }, {\n    key: \"onListItemUpdate\",\n    value: function onListItemUpdate(arrVal, e) {\n      this.setState({\n        autoIn: arrVal,\n        showMenu: true\n      });\n\n      if (this.props.data.indexOf(arrVal) !== -1) {\n        if (this.props.type == \"checkbox\") {\n          this.setState({\n            autoIn: \"\"\n          });\n          this.props.onChange(arrVal, e.target.checked);\n        } else {\n          this.setState({\n            autoIn: \"\",\n            showMenu: false\n          });\n          this.props.onChange(arrVal);\n        }\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var autoIn = this.state.autoIn;\n      var showMenu = this.state.showMenu;\n\n      if (!showMenu) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"autocomplete-items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" \", this.returnMenuItem());\n    }\n  }, {\n    key: \"returnMenuItem\",\n    value: function returnMenuItem() {\n      var _this2 = this;\n\n      var autoIn = this.state.autoIn;\n      var filterdArr = this.props.data.filter(function (arrVal, index) {\n        return arrVal.substr(0, autoIn.length).toUpperCase() == autoIn.toUpperCase();\n      });\n      return filterdArr.map(function (arrVal, index) {\n        if (_this2.props.type == \"checkbox\" && _this2.props.checkeddata.indexOf(arrVal) !== -1) {\n          return React.createElement(\"div\", {\n            key: index,\n            className: \"autocompleteCheckbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            onClick: _this2.onListItemUpdate.bind(_this2, arrVal),\n            checked: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }), arrVal);\n        } else if (_this2.props.type == \"checkbox\" && _this2.props.checkeddata.indexOf(arrVal) === -1) {\n          return React.createElement(\"div\", {\n            key: index,\n            className: \"autocompleteCheckbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            onClick: _this2.onListItemUpdate.bind(_this2, arrVal),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }), arrVal);\n        } else {\n          return React.createElement(\"div\", {\n            key: index,\n            onClick: _this2.onListItemUpdate.bind(_this2, arrVal),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, arrVal);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\" // onChange = {this.onAutoInputUpdate.bind(this)} \n        // onFocus = {this.onAutoInputUpdate.bind(this)} \n        ,\n        value: this.state.autoIn,\n        ref: this.setTextInputRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return Autosuggest;\n}(Component);\n\nexport { Autosuggest as default };","map":{"version":3,"sources":["/Users/rsing25/flag-picker-app/src/components/autosuggest.js"],"names":["React","Component","ReactDOM","Autosuggest","props","handleClick","e","findDOMNode","contains","target","setState","showMenu","state","autoIn","document","addEventListener","bind","removeEventListener","value","arrVal","data","indexOf","type","onChange","checked","returnMenuItem","filterdArr","filter","index","substr","length","toUpperCase","map","checkeddata","onListItemUpdate","setTextInputRef","renderList"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom'\n\nexport default class Autosuggest extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {autoIn:\"\", showMenu:false};\n    }\n\n    componentWillMount() {\n        document.addEventListener('mousedown', this.handleClick.bind(this), false);\n    }\n\n    componentWillUnMount() {\n        document.removeEventListener('mousedown', this.handleClick.bind(this), false);\n    }\n\n    onAutoInputUpdate(e) {\n        this.setState({autoIn: e.target.value, showMenu: true});\n    }\n\n    handleClick = e => {\n        if(ReactDOM.findDOMNode(this).contains(e.target)) {\n            return;\n        } else {\n            this.setState({ showMenu: false});\n        }\n    }\n\n    onListItemUpdate(arrVal,e) {\n        this.setState({autoIn: arrVal, showMenu: true});\n        if(this.props.data.indexOf(arrVal) !== -1) {\n            if(this.props.type == \"checkbox\") {\n                this.setState({autoIn: \"\"});\n                this.props.onChange(arrVal,e.target.checked);\n            } else {\n                this.setState({autoIn: \"\", showMenu: false});\n                this.props.onChange(arrVal);\n            }\n        }\n    }\n    \n    renderList() {\n        const autoIn = this.state.autoIn;\n        const showMenu = this.state.showMenu;\n        if(!showMenu) {\n            return (<div></div>);\n        }\n        return (<div className = \"autocomplete-items\"> {this.returnMenuItem()}</div>);\n    }\n    \n    returnMenuItem() {\n        const autoIn = this.state.autoIn;\n        const filterdArr = this.props.data.filter( (arrVal, index) => {\n            return arrVal.substr(0,  autoIn.length).toUpperCase() == autoIn.toUpperCase();\n        });\n        return filterdArr.map( (arrVal, index) => {\n            if(this.props.type == \"checkbox\" && this.props.checkeddata.indexOf(arrVal) !== -1 ) {\n                return (<div  key= {index} className=\"autocompleteCheckbox\" >\n                            <input  type= \"checkbox\"\n                                onClick = {this.onListItemUpdate.bind(this,arrVal)}  checked>\n                            </input>{arrVal}\n                        </div>);\n            } else if(this.props.type == \"checkbox\" && this.props.checkeddata.indexOf(arrVal) === -1 ) {\n                return (<div  key= {index} className=\"autocompleteCheckbox\" >\n                            <input  type= \"checkbox\" \n                                onClick = {this.onListItemUpdate.bind(this,arrVal)}  >\n                            </input>{arrVal}\n                        </div>);\n            } else {\n                return (<div key= {index} onClick = {this.onListItemUpdate.bind(this,arrVal)}  >{arrVal}</div>);\n            }\n        });  \n    }\n\n    \n    render() {\n        return(\n        <div>\n            <input type=\"text\"  \n                    // onChange = {this.onAutoInputUpdate.bind(this)} \n                    // onFocus = {this.onAutoInputUpdate.bind(this)} \n                    value = {this.state.autoIn}\n                    ref={this.setTextInputRef} />\n            <div>\n                {this.renderList()}\n            </div>\n        </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}