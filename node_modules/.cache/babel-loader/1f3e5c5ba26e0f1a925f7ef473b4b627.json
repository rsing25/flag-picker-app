{"ast":null,"code":"import _classCallCheck from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rsing25/flag-picker-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rsing25/flag-picker-app/src/containers/country-list.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectConuntry } from \"../actions/index\";\nimport AutoSuggest from \"../components/autosuggest\";\n\nvar ContinentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContinentList, _Component);\n\n  function ContinentList(props) {\n    var _this;\n\n    _classCallCheck(this, ContinentList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContinentList).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ContinentList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.activeContinent.continent || this.props.activeContinent == null) {\n        return null;\n      }\n\n      var data = this.props.continents.filter(function (arrVal, index) {\n        return _this2.props.activeContinent.continent === arrVal.continent;\n      });\n      var dataIn = data[0].countries.map(function (country) {\n        return country.name;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Step 2\"), React.createElement(\"div\", {\n        className: \"text-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Now, Select a country\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(AutoSuggest, {\n        type: \"checkbox\",\n        data: dataIn,\n        checkeddata: this.props.countries,\n        onChange: this.onChangeConuntry.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"onChangeConuntry\",\n    value: function onChangeConuntry(country, checked) {\n      this.props.onSelectConuntry({\n        country: country,\n        checked: checked\n      });\n    }\n  }]);\n\n  return ContinentList;\n}(Component);\n\nexport var mapStateToProps = function mapStateToProps(state) {\n  return {\n    continents: state.continents,\n    countries: state.countries,\n    activeContinent: state.activeContinent\n  };\n};\nexport var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSelectConuntry: function onSelectConuntry(options) {\n      dispatch(selectConuntry(options));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContinentList);","map":{"version":3,"sources":["/Users/rsing25/flag-picker-app/src/containers/country-list.js"],"names":["React","Component","connect","selectConuntry","AutoSuggest","ContinentList","props","state","activeContinent","continent","data","continents","filter","arrVal","index","dataIn","countries","map","country","name","onChangeConuntry","bind","checked","onSelectConuntry","mapStateToProps","mapDispatchToProps","dispatch","options"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;IAEMC,a;;;;;AAEF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFe;AAGlB;;;;6BAEQ;AAAA;;AACL,UAAG,CAAC,KAAKD,KAAL,CAAWE,eAAX,CAA2BC,SAA5B,IAA0C,KAAKH,KAAL,CAAWE,eAAX,IAA8B,IAA3E,EAAiF;AAC7E,eAAO,IAAP;AACH;;AACD,UAAME,IAAI,GAAG,KAAKJ,KAAL,CAAWK,UAAX,CAAsBC,MAAtB,CAA8B,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC1D,eAAO,MAAI,CAACR,KAAL,CAAWE,eAAX,CAA2BC,SAA3B,KAAyCI,MAAM,CAACJ,SAAvD;AACH,OAFY,CAAb;AAGA,UAAMM,MAAM,GAAGL,IAAI,CAAC,CAAD,CAAJ,CAAQM,SAAR,CAAkBC,GAAlB,CAAsB,UAACC,OAAD,EAAW;AAC5C,eAAOA,OAAO,CAACC,IAAf;AACH,OAFc,CAAf;AAGA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,oBAAC,WAAD;AACG,QAAA,IAAI,EAAC,UADR;AAEG,QAAA,IAAI,EAAGJ,MAFV;AAGG,QAAA,WAAW,EAAI,KAAKT,KAAL,CAAWU,SAH7B;AAIG,QAAA,QAAQ,EAAI,KAAKI,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,CAHJ,CADJ;AAWH;;;qCAEgBH,O,EAASI,O,EAAU;AAChC,WAAKhB,KAAL,CAAWiB,gBAAX,CAA4B;AAACL,QAAAA,OAAO,EAACA,OAAT;AAAiBI,QAAAA,OAAO,EAACA;AAAzB,OAA5B;AACH;;;;EAhCuBrB,S;;AAmC5B,OAAO,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAAAjB,KAAK,EAAI;AACpC,SAAO;AACHI,IAAAA,UAAU,EAAEJ,KAAK,CAACI,UADf;AAEHK,IAAAA,SAAS,EAAET,KAAK,CAACS,SAFd;AAGHR,IAAAA,eAAe,EAAED,KAAK,CAACC;AAHpB,GAAP;AAKH,CANM;AAQP,OAAO,IAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AAC1C,SAAO;AACHH,IAAAA,gBAAgB,EAAE,0BAAAI,OAAO,EAAI;AACzBD,MAAAA,QAAQ,CAACvB,cAAc,CAACwB,OAAD,CAAf,CAAR;AACH;AAHE,GAAP;AAKH,CANM;AAQP,eAAezB,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpB,aAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectConuntry } from \"../actions/index\";\nimport AutoSuggest from \"../components/autosuggest\";\n\nclass ContinentList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        if(!this.props.activeContinent.continent  || this.props.activeContinent == null) {\n            return null;\n        }\n        const data = this.props.continents.filter( (arrVal, index) => {\n            return this.props.activeContinent.continent === arrVal.continent;\n        });\n        const dataIn = data[0].countries.map((country)=>{\n            return country.name;\n        });\n        return (\n            <div>\n                <div className=\"text-1\">Step 2</div>\n                <div className=\"text-2\">Now, Select a country</div>\n                <div><AutoSuggest \n                        type=\"checkbox\" \n                        data= {dataIn} \n                        checkeddata = {this.props.countries} \n                        onChange = {this.onChangeConuntry.bind(this)}/></div>\n            </div>\n        );\n    }\n\n    onChangeConuntry(country, checked)  {\n        this.props.onSelectConuntry({country:country,checked:checked});\n    }\n}\n\nexport const mapStateToProps = state => {\n    return {\n        continents: state.continents,\n        countries: state.countries,\n        activeContinent: state.activeContinent\n    };\n};\n\nexport const mapDispatchToProps = dispatch => {\n    return {\n        onSelectConuntry: options => {\n            dispatch(selectConuntry(options));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContinentList);\n"]},"metadata":{},"sourceType":"module"}